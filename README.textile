h1. Avalanche

p. On this project our major goal game making easier, without reducing performance or limiting like other tools. We also want it to be Free and Open Source.

p. Please note that being Free and Open Source does not excludes the possibility of writing proprietary profitable games, so we also make it easy to create such projects.

p. On our examples we also use SDL2 and Chipmunk, which are completely optional. Our projects already runs on Android

* Support for android is on the way: We're already able to compile ours examples to an android compatible library and run it, but it seems like SDL is not responding normally.

* Editor development is suspended for undefined time.

h2. How to install and compile?

p. Everything is going to be explained in Avalanche's wiki, Consider taking a look at this pages:

* "FAQ":https://github.com/avalanche-games/avalanche/wiki/FAQ

* "Getting Started (for Linux users)":https://github.com/avalanche-games/avalanche/wiki/Getting-Started-(for-Linux-users)

* "All wiki pages":https://github.com/avalanche-games/avalanche/wiki/_pages

h2. Hacking

p. If you want to contribute to the project, first, note that everything you pull to this project is copyrighted to the contributors (which will include you). If you do not want to be an official contributor, just fork the project and pull your commits to the main repository, you should also keep our coding style:

<pre>
// Root namespace on a fake '-1' indentations level
namespace A {
// do not write 'using'

// Type is camel case, do not refer to glib directly, but always refer to others
public class SyntaxSample : Object {
    // Tabs instead of spaces
    public void x_e(int y, float x) {
		/* Comments on separated lines
		 * Any multi-lined comment over ** and any single over //
		 * Between 80 to 120 characters per line (even code)
		 * Indentation: 1 Tab
		 */
		int z_a;
		// Space before every comment
		if(y > x) {
			// Explicit namespaces, no "using" statements 
			z_a = A.B.do_sth(x, y, z, a, b, c, d, e, f , g,
			h, i, j, k, l, m, n, o , p);
		// Space before every opening bracket
		}else {
			A.B.do_otherth(y);
		}
		// If needed remember to do the correct usage of &\&&
	}
}// SyntaxSample << This kind of comment is for remembering what is being closed


public enum  SomeEnum {
	ALL_UPPER_CASE, WITH_UNDERSCORE
}// SomeEnum


}// A
</pre>

p. If you follow those styles guidelines your commit might be accepted.

h2. Problems

p. If something is bothering you, you should really create an issue on our GitHub, we have no restriction about the
issues that you should create, but we ask you to:

p. Give information about your Operational System, GCC version, Vala version, and everything you tried to do to fix
the problem, if some commits or patchs were added, sending them might help solving the problem.

h1. Team

h3. Main Team:

* Christian Ferraz Lemos de Sousa (founder, feature planner, main programmer, build scripts)
* Pedro Henrique Lara Campos (founder, API planner, main programmer, janitor)

h3. Colaborators:

* No colaborators yet

h3. Special Thanks:

* No special thanks yet

h1. Licensing

<pre>
                          Copyright(C) 2013
                   Christian Ferraz Lemos de Sousa
                      Pedro Henrique Lara Campos

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
</pre>

